# -*- coding: UTF-8 -*-
__author__ = 'sakim'

import unittest
import boardcover


class BoardCoverTest(unittest.TestCase):
    def test_solve(self):
        self.assertEqual(0, boardcover.solve(3, 7,
                                             [['#', '.', '.', '.', '.', '.', '#'],
                                              ['#', '.', '.', '.', '.', '.', '#'],
                                              ['#', '#', '.', '.', '.', '#', '#']]))

        self.assertEqual(2, boardcover.solve(3, 7,
                                             [['#', '.', '.', '.', '.', '.', '#'],
                                              ['#', '.', '.', '.', '.', '.', '#'],
                                              ['#', '#', '.', '.', '#', '#', '#']]))

        self.assertEqual(1514, boardcover.solve(8, 10,
                                                [['#', '#', '#', '#', '#', '#', '#', '#', '#', '#'],
                                                 ['#', '.', '.', '.', '.', '.', '.', '.', '.', '#'],
                                                 ['#', '.', '.', '.', '.', '.', '.', '.', '.', '#'],
                                                 ['#', '.', '.', '.', '.', '.', '.', '.', '.', '#'],
                                                 ['#', '.', '.', '.', '.', '.', '.', '.', '.', '#'],
                                                 ['#', '.', '.', '.', '.', '.', '.', '.', '.', '#'],
                                                 ['#', '.', '.', '.', '.', '.', '.', '.', '.', '#'],
                                                 ['#', '#', '#', '#', '#', '#', '#', '#', '#', '#']]))


if __name__ == '__main__':
    unittest.main()
